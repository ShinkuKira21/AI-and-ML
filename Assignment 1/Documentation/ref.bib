
@inproceedings{boukhdhir_improved_2015,
	title = {An improved {mapReduce} design of kmeans for clustering very large datasets},
	doi = {10.1109/AICCSA.2015.7507226},
	abstract = {Clustering is an important data analysis technique which is used for the purpose to classify the data into groups of similar items. Clustering has high applicability in different fields. However, it becomes very challenging due to the sharply increase in the volume of data generated by modern applications. Kmeans is a simple and widely used algorithm for cluster analysis. But, the traditional k-means is computationally expensive, sensitive to outliers and has an unstable result hence its inefficiency when dealing with very large datasets. Solving these issues is the subject of many recent research works. {MapReduce} is a simplified programming model designed to process data intensive applications in a parallel environment. In this paper, we propose an improved design of k-means based on {mapReduce} in order to adapt it to handle large-scale datasets by reducing its execution time. Moreover we will propose two other algorithms. The first is designed to remove outliers from the dataset, and the second is designed to select automatically the initials centroids thereby stabilize the result. The implementation of our proposed algorithm on Hadoop platform shows that is much faster than three other existing algorithms in the literature.},
	eventtitle = {2015 {IEEE}/{ACS} 12th International Conference of Computer Systems and Applications ({AICCSA})},
	pages = {1--6},
	booktitle = {2015 {IEEE}/{ACS} 12th International Conference of Computer Systems and Applications ({AICCSA})},
	author = {Boukhdhir, Amira and Lachiheb, Oussama and Gouider, Mohamed Salah},
	date = {2015-11},
	note = {{ISSN}: 2161-5330},
	keywords = {Big Data, Clustering, Hadoop, Scalability, k-means, {mapReduce}},
}

@inproceedings{tsai_fast_2009,
	title = {A fast tree-based search algorithm for cluster search engine},
	doi = {10.1109/ICSMC.2009.5346100},
	abstract = {In this paper, we present an Intelligent Cluster Search Engine System, called {ICSE}. This system is motivated by the observation that traditional search engines present to the users a set of non-classified web pages based on its ranking mechanism, and the unfortunate results are that they usually can not satisfy the need of users. For this reason, {ICSE} provides to the user a set taxonomic web pages in response to a user's query, and thus it would greatly help the users filter out irrelevant or redundant information. The proposed system can be divided into two parts. The first is the knowledge base constructed by Open Directory Project and Yahoo! Directory. The second is the fast clustering algorithm described herein for clustering the web pages. In addition, in response to a user's query, the proposed system will first send the query to a meta-search engine. Then, it will create a clustered document set using the given knowledge base and the clustering algorithm of {ICSE}. Our simulation result showed that the proposed system can enhance the relevance and coverage of the search results that the users need compared with traditional search engines.},
	eventtitle = {2009 {IEEE} International Conference on Systems, Man and Cybernetics},
	pages = {1603--1608},
	booktitle = {2009 {IEEE} International Conference on Systems, Man and Cybernetics},
	author = {Tsai, Chun-Wei and Huango, Ko-Wei and Chiang, Ming-Chao and Yang, Chu-Sing},
	date = {2009-10},
	note = {{ISSN}: 1062-922X},
	keywords = {Animals, Clustering algorithms, Cybernetics, Humans, Information filtering, Information filters, Internet, Metasearch, Search engines, Web pages, clustering search engine, document clustering, meta-search engine},
}

@inproceedings{mishra_analysis_2017,
	title = {Analysis of tree based search techniques for solving 8-puzzle problem},
	doi = {10.1109/IPACT.2017.8245012},
	abstract = {The 8-puzzle is a sliding puzzle that consists of a frame of numbered square tiles in random order with one tile missing. The more general n-puzzle is a classical problem which can be solved using graph search techniques. The problem of finding the optimal solution is {NP}-hard. In this paper, we analyze the performance of various informed and uninformed search techniques for finding the optimal solution for a solvable goal state of the 8 puzzle. For using the uninformed search techniques, the problem is converted into a game tree and all of the states are examined till we find the goal. In case of informed search techniques, we do not examine all of the states. Essentially, a search tree which is a component of the game tree is built. In a search tree, we make use of an appropriate heuristic which guides us to take a decision from a current state to the next state in an intelligent manner and hence the state space is significantly reduced resulting in memory and time optimization.},
	eventtitle = {2017 Innovations in Power and Advanced Computing Technologies (i-{PACT})},
	pages = {1--5},
	booktitle = {2017 Innovations in Power and Advanced Computing Technologies (i-{PACT})},
	author = {Mishra, Arpan Kumar and Siddalingaswamy, P C},
	date = {2017-04},
	keywords = {Computer science, Computers, Game Tree, Games, Graph Search, Hamming distance, Heurisitcs, Informed Search, Limiting, Search Tree, Search problems, Technological innovation, Uninformed Search},
}

@inproceedings{jinhuaxu_web_2010,
	title = {Web user clustering analysis based on {KMeans} algorithm},
	volume = {2},
	doi = {10.1109/ICINA.2010.5636772},
	abstract = {As one of the most important tasks of Web Usage Mining ({WUM}), web user clustering, which establishes groups of users exhibiting similar browsing patterns, provides useful knowledge to personalized web services. In this paper, we cluster web users with {KMeans} algorithm based on web user log data. Given a set of web users and their associated historical web usage data, we study their behavior characteristic and cluster them. Experiment results show the feasibility and efficiency of such algorithm application. Web user clusters generated in this way can provide novel and useful knowledge for various personalized web applications.},
	eventtitle = {2010 International Conference on Information, Networking and Automation ({ICINA})},
	pages = {V2--6--V2--9},
	booktitle = {2010 International Conference on Information, Networking and Automation ({ICINA})},
	author = {{JinHuaXu} and {HongLiu}},
	date = {2010-10},
	note = {{ISSN}: 2162-5484},
	keywords = {Clustering algorithms, {KMeans}, Mobile communication, Scalability, clustering, similarity, vector matrix, web user},
}

@inproceedings{jurkiewicz_empirical_2021,
	title = {Empirical Time Complexity of Generic Dijkstra Algorithm},
	abstract = {Generic Dijkstra is a novel algorithm for finding the optimal shortest path in both wavelength-division multiplexed networks ({WDM}) and elastic optical networks ({EON}), claimed to outperform known algorithms considerably. Because of its novelty, it has not been independently implemented and verified. Its time complexity also remains unknown. In this paper, we perform run-time analysis and show that Generic Dijkstra running time grows quadratically with the number of graph vertices and logarithmically with the number of edge units. We also discover that the running time of the Generic Dijkstra algorithm in the function of network utilization is not monotonic, as peak running time is at approximately 0.25 network utilization. Additionally, we provide an independent open source implementation of Generic Dijkstra in the Python language. We confirm the correctness of the algorithm and its superior performance. In comparison to the Filtered Graphs algorithm, Generic Dijkstra is approximately 2.3 times faster in networks with 25 to 500 nodes, and in 90\% of calls its computation takes less time.},
	eventtitle = {2021 {IFIP}/{IEEE} International Symposium on Integrated Network Management ({IM})},
	pages = {594--598},
	booktitle = {2021 {IFIP}/{IEEE} International Symposium on Integrated Network Management ({IM})},
	author = {Jurkiewicz, Piotr and Biernacka, Edyta and Domżał, Jerzy and Wójcik, Robert},
	date = {2021-05},
	note = {{ISSN}: 1573-0077},
	keywords = {Adaptive optics, Approximation algorithms, {EON}, Filtering algorithms, Integrated optics, Optical filters, Optical network units, {RMSA}, {RSA}, {RWA}, {WDM} networks, elastic optical networks, time complexity},
}

@article{barbehenn_note_1998,
	title = {A note on the complexity of Dijkstra's algorithm for graphs with weighted vertices},
	volume = {47},
	issn = {1557-9956},
	doi = {10.1109/12.663776},
	abstract = {Let G(V, E) be a directed graph in which each vertex has a nonnegative weight. The cost of a path between two vertices in G is the sum of the weights of the vertices on that path. We show that, for such graphs, the time complexity of Dijkstra's algorithm (E.W. Dijkstra, 1959), implemented with a binary heap, is O({\textbar}E{\textbar}+{\textbar}V{\textbar}log{\textbar}V{\textbar}).},
	pages = {263--},
	number = {2},
	journaltitle = {{IEEE} Transactions on Computers},
	author = {Barbehenn, M.},
	date = {1998-02},
	keywords = {Cost function, Data structures, Orbital robotics, Space exploration, Testing},
}

@inproceedings{palanisamy_cluster_2020,
	title = {Cluster Based Multi Agent System for Breadth First Search},
	doi = {10.1109/ICTer51097.2020.9325464},
	abstract = {Tree searching problems plays vital role in artificial intelligence and the most of the tree search algorithms have been implemented using structured or object oriented programming. The sequential breadth first search algorithm starts traversing from a source or starting node to neighbour nodes which are adjacently attached to source node in the graphs. It is based on the layer wise exploring the neighbour nodes. The design of multi agent system for searching algorithms is one of the solutions for the algorithm efficiency in graph algorithms. In this paper, the design of multi agent system for breadth first search is presented with implementation detail. The proposed design divides the whole graph into several clusters by using bi-connected region method and assigns the agents to each clusters to perform the breadth first search in each cluster sequentially. The performance measure of the proposed method reveals the competitive results in terms of the sequential breadth first search algorithm.},
	eventtitle = {2020 20th International Conference on Advances in {ICT} for Emerging Regions ({ICTer})},
	pages = {54--58},
	booktitle = {2020 20th International Conference on Advances in {ICT} for Emerging Regions ({ICTer})},
	author = {Palanisamy, Vigneshwaran and Vijayanathan, Senthooran},
	date = {2020-11},
	note = {{ISSN}: 2472-7598},
	keywords = {Artificial intelligence, Bi-connected clustering, Breadth first search, Clustering algorithms, Complexity theory, Information and communication technology, Multi Agent System, Multi-agent systems, Receivers, Search problems, Time complexity},
}

@inproceedings{jeyalatha_design_2011,
	title = {Design and implementation of a web structure mining algorithm using breadth first search strategy for academic search application},
	abstract = {This paper deals with Web Structure Mining, using the Breadth First Search strategy. While browsing the web, the user has to go through many pages of the Internet, filter data and download required information. This task of searching and downloading is time consuming. Sometimes the search queries call for specific option, say, limiting search to few links. To reduce the time spent by users, a web link extraction tool has been designed and implemented in Java, that analyzes the ways of extracting web link information using a standard interface. The Test Scenario has been presented with various keywords like Higher Education, Conference Alerts and Special Interest Group. The present work can be a useful input to Web Users, Faculty, Students and Web Administrators in a University Environment. The web extraction tool helps to save time in searching and downloading files from the web. Another strong requirement is to verify whether the search keywords which have been entered by the user, gives an user accurate and relevant results. This is made possible by performing a quick check on search links. The user can also view the internal links present in the selected {HTML} files and the adjacency list of the crawled files.},
	eventtitle = {2011 International Conference for Internet Technology and Secured Transactions},
	pages = {648--654},
	booktitle = {2011 International Conference for Internet Technology and Secured Transactions},
	author = {Jeyalatha, S. and Vijayakumar, B.},
	date = {2011-12},
	keywords = {Adjacency List, Breadth First Search, Data mining, Downloading, Google, {HTML}, Java, User interfaces, Web Extraction, Web Structure Mining, Web pages, {XML}},
}

@inproceedings{palanisamy_novel_2020,
	title = {A Novel Agent Based Depth First Search Algorithm},
	doi = {10.1109/ICCCA49541.2020.9250826},
	abstract = {Artificial intelligent techniques provide different kind of searching methods in tree structure and those methods are implemented sequential and parallel manner using structured programming. Depth-first search is a tree search algorithm which enables the traversal from source node to neighbour nodes adjacent to source node in a graph and implemented sequentially in this fashion. The improvement of the sequential Depth-first search is sought in several research studies. One of the solutions to the improvement of Depth-first search is the design of multi agent system for the searching problem. In this research study, the proposed multi agent system for Depth-first search divides the entire graph into several clusters using bi-connected region method and consigns the agents to each cluster to perform the Depth-first search sequentially. The proposed method reveals the significance improvement in terms of the performance measure of the system than sequential Depth-first search.},
	eventtitle = {2020 {IEEE} 5th International Conference on Computing Communication and Automation ({ICCCA})},
	pages = {443--448},
	booktitle = {2020 {IEEE} 5th International Conference on Computing Communication and Automation ({ICCCA})},
	author = {Palanisamy, Vigneshwaran and Vijayanathan, Senthooran},
	date = {2020-10},
	note = {{ISSN}: 2642-7354},
	keywords = {Automation, Bi-connected clustering, Clustering algorithms, Conferences, Depth-first search, Multi Agent Systems, Programming, Search problems, Time measurement, Tree Structure},
}

@inproceedings{deng_combining_2010,
	title = {Combining breadth-first with depth-first search algorithms for {VLSI} wire routing},
	volume = {6},
	doi = {10.1109/ICACTE.2010.5579168},
	abstract = {A breadth-first search ({BFS}) algorithm usually needs less time but consumes more computer memory space than a depth-first search ({DFS}) algorithm to find the shortest path between two nodes. This paper attempts to combine {BFS} with {DFS} algorithms to find all shortest paths in the {VLSI} (Very Large Integration Circuits) wire routing. {BFS} is used to compute the shortest distance between every position and the start one. {DFS} is used to traverse all shortest paths in the course of backtracking from the end position to the start one. The effectiveness of the method is proved by the theoretical analysis and the experiment results.},
	eventtitle = {2010 3rd International Conference on Advanced Computer Theory and Engineering({ICACTE})},
	pages = {V6--482--V6--486},
	booktitle = {2010 3rd International Conference on Advanced Computer Theory and Engineering({ICACTE})},
	author = {Deng, Xinguo and Yao, Yangguang and Chen, Jia and Lin, Yufeng},
	date = {2010-08},
	note = {{ISSN}: 2154-7505},
	keywords = {Routing, breadth-first search, depth-first search, shortest paths, wire routing},
}